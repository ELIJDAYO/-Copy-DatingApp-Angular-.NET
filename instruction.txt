Section 2
    dotnet --info
    dotnet new list
    dotnet new sln
        dotnet sln -h
        dotnet sln list
    dotnet new webapi -n API
    dotnet sln add API

    install CS extension
    
    cd API dotnet run (controller listening to an end point)

    dotnet run -lp https
    (need ssl cert?)

    after editing some settings.json
    dotnet run

    after removing ItemGroup from api.csproj
    dotnet restore

    installed nuget gallery extension
    crtl+p, >microsoft.entityFrameWork, install sqlite and desig to API.csproj

    cd API, dotnet tool list -g
    dotnet tool install --global dotnet-ef --version 7.0.3
    

    dotnet ef, dotnet ef migrations add InitialCreate -o Data/Migrations
    if you see err do "dotnet build"

    cd API, dotnet ef database -h, dotnet ef database update

    install sqlite extension, >sqlite: open db, then insert queries

    using c# extension, make naming convention easier by _
    after completing the source code of controller, dotnet watch run, http://localhost:5001/api/users, or use postman to verify api res and req

    it tells which sdk is being used for this project, do this command when creating a project
    dotnet new globaljson


    section 3: angular used for client-side web application
    npm install -g @angular/cli@14

    ng new client, select y and css


Section 3
    cd client, ng serve (to execute angular application)
    from extension download Angular Language Service
    add cors to user api will be accepted by the browser
    cd to API, and "dotnet watch run" for API req
    API returns variable name in camel case
    cd Client,npm uninstall @schematics/angular
    ng version
    npm install ngx-bootstrap@9
    ng add ngx-bootstrap
    npm install @angular/platform-browser
    cd Client to restart the BS config

    install Chocolatey from browser to powershell, and go to mkcert github to install packages for windows
    run powershell as an admin, mkdir ssl in client folder, cd ssl, choco install mkcert, mkcert -install, mkcert localhost, so there should be pem files in DatingApp/client/ssl
    if user data is not displayed, dotnet dev-certs https --clean, dotnet dev-certs https, dotnet dev-certs https --trust

    run ng serve with ssl so modify the angular.json, then restart

    download the ssl cert from the coursefile, import to currentuser, copy server.crt and server.key to DatingApp/ssl dir

Section 4

    disable hot-reload, dotnet watch --no-hot-reload
    stop api from running to do migration, cd API,
    stop running API and client, cd API, delete migration folder, dotnet ef database drop, dotnet ef migrations add UserPasswordAdded
    
    if postman does not work try refreshing the API

    (debugger) >.NET: Generate Assets for Build and Debug, run API and client, select .NET Core Attach and run, then put mark where to end debugging, post user from postman 

    stop running API and client, cd API, delete migration folder, dotnet ef database drop, dotnet ef migrations add UsernameRequired

    >nuget, search, Sys.IdentityModel.Token.Jwt, and install this package

    if "the key size must be greater than: '512' bits, key has '232' bits. (Parameter 'keyBytes')"
    appears then try lengthening the TokenKey in appsettings.dev.json by generating randome text by "openssl rand -base64 64" command

    to install the JwtBearerDefaults package, >nuget, RefreshMicrosoft.AspNetCore.Authentication.JwtBearer by Microsoft, install and put check the checkbox
    
section 5
    cd client, ng g component nav --skip-tests --dry-run, ng g component nav --skip-tests (check the ng g -help)
    cd client, ng g service _services/account --skip-tests --dry-run, ng g service _services/account  --skip-tests

    cd client, go to ngx-bootstrap component dropdowns API, copy paste the "ng add ngx-bootstrap  --component dropdowns
 in the terminal, then update the app.module.ts import

    cd client, ng g c home --skip-tests
    cd client, ng g c register --skip-tests

section 6
    cd client, ng g c members/member-list --skip-tests --dry-run, ng g c members/member-list --skip-tests, ng g c members/member-detail --skip-tests, ng g c lists --skip-tests, ng g c messages --skip-tests 
    cd client, npm i ngx-toastr, then restart ng server
    cd client, ng g guard _guards/auth --skip-tests --dry-run, CanActivate, ng g guard _guards/auth --skip-tests
    cd client, npm install bootswatch, add new styles in angular.json and restart client
    cd, client, ng g m _modules/shared --dry-run, ng g m _modules/shared --flat --dry-run, ng g m _modules/shared --flat, --flat means not created in separated folder

section 7
    after updating Controller file, rerun API server
    cd client, ng g c errors/test-error --skip-tests, 
    cd client, ng g interceptor _interceptors/error --skip-tests --dry-run, ng g interceptor _interceptors/error --skip-tests
    cd client, ng g c errors/not-found --skip-tests
    cd client, ng g c errors/server-error --skip-tests

section 8
    after updating the user entity, cd API, dotnet ef migrations add ExtendedUserEntity, because of nullable relational attribute AppUserId, dotnet ef migrations remove
    updated user entity again, cd API, stop API server, dotnet ef migrations add ExtendedUserEntity, (dotnet ef database update) | delete migration folder, dotnet ef database drop, dotnet ef migrations add ExtendedUserEntity
    go to https://json-generator.com/, then copy paste the content from the student-asset/jsongenerator, generate, copy json to clipboard and paste to Data/UserSeedData.json, dotnet ef migrations add ExtendedUserEntity
    if you cannot see the seeded db because sqlite err, delete migrations folder, dotnet ef database drop, dotnet watch --no-hot-reload
    go to postman, Section 8 folder, and set Type Get Users to Bearer Token with key {{token}}, login as whatever user
    crtl+shift+p, nuget, automapper.extensions...

section 9 (typescript)
    Postman, section 8 login, Get user by username, copy the JSON output, paste the content to json2ts.com, and copy result
    cd client, ng g environments, if it does not work create manually
For record purpose
          Name                               Version                  Command to update
     --------------------------------------------------------------------------------
      @angular/cli                       14.2.11 -> 15.2.9        ng update @angular/cli@15
      @angular/core                      14.3.0 -> 15.2.9         ng update @angular/core@15
      ngx-toastr                         13.2.1 -> 17.0.2         ng update ngx-toastr


    cd client, ng g s _services/members --skip-tests
    cd client, ng g c member/member-card --skip-tests